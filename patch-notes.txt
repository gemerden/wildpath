version 0.1.7:

 - initial version

version 0.2.0

 - object attribute access is now based on dir(), getattr(), setattr(), delattr() instead of direct obj.__dict__ access.

version 0.2.1

 - adds (Wild)Path.call_in(self, *args, **kwargs) to call methods and get return values in a data-structure,
 - improves handling of defaults for WildPath.get_in: now replaces missing values in result instead of returning a single value,
 - adds a 'flat' parameter to WilfPath.get_in, returning values in a single flat list; default is False.

 version 0.2.2

 - makes iterators (Path.items(obj), ...) less greedy to prevent infinite recursions in some cases.

 version 0.2.3

 - small fix to handling of negative indices.


 version 0.2.4

  - fixes string items in object sometimes returning doubles when `flat=True`

version 0.2.5

  - always return dicts or list or normal values, instead of trying to copy the original classes (was mainly for OrderedDicts
        but the compact dict implementation of pyhton 3.6 makes that unnecessary and e.g. default dicts would cause issues),
  - maintains order of original lists (and in python 3.6 dicts) better, e.g. negative slice steps (WildPath("::-1") will now
        reverse order,
  - refactors and small fixes; get_in will now also get funtion instance attributes.

version 0.2.6

  - small fixes

version 0.2.7

  - classes implementing (Mutable-) Sequence will handle string keys (int(key) fails) to look up attributes and integers and
        slices to access list elements.



